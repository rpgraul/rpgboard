import*as cardRenderer from"./cardRenderer.js";import{showConfirmationPopover}from"./ui.js";import*as cardManager from"./cardManager.js";let eventHandlers={},muuriGrid=null;const itemsContainer=document.getElementById("grid-view-container"),searchInput=document.getElementById("search-input"),loadingIndicator=document.getElementById("loading-indicator");export function initializeGrid(e){eventHandlers=e,itemsContainer.addEventListener("click",(e=>{const t=e.target,n=t.closest(".action-icon"),i=t.closest(".card");if(!n||!i)return;const r=i.dataset.id,a=cardManager.getItems().find((e=>e.id===r));a&&(n.classList.contains("view-btn")?eventHandlers.onView(a):n.classList.contains("delete-btn")?showConfirmationPopover({targetElement:n,message:"Deletar este card?",onConfirm:()=>eventHandlers.onDelete(a)}):n.classList.contains("edit-btn")?eventHandlers.onEdit(i,a,itemsContainer):n.classList.contains("save-btn")?eventHandlers.onSave(i,a,itemsContainer):n.classList.contains("cancel-btn")&&(itemsContainer.classList.remove("is-editing-item"),cardRenderer.renderCardViewMode(i,a),i._newImageFile&&delete i._newImageFile,muuriGrid?.layout(!0)))})),initializeMuuri()}export function setItems(e){if(loadingIndicator&&(loadingIndicator.style.display="none"),!muuriGrid)return;const t=muuriGrid.getItems(),n=new Set(t.map((e=>e.getElement().dataset.id))),i=new Set(e.map((e=>e.id))),r=t.filter((e=>!i.has(e.getElement().dataset.id)));r.length>0&&muuriGrid.remove(r,{removeElements:!0});const a=e.filter((e=>!n.has(e.id))).map((e=>cardRenderer.createCardElement(e)));t.forEach((t=>{const n=t.getElement();if(i.has(n.dataset.id)){const t=e.find((e=>e.id===n.dataset.id));t&&!n.classList.contains("editing")&&cardRenderer.renderCardViewMode(n,t)}})),a.length>0&&muuriGrid.add(a);const s=e.map((e=>e.id));muuriGrid.sort(((e,t)=>s.indexOf(e.getElement().dataset.id)-s.indexOf(t.getElement().dataset.id)),{layout:"instant"})}export function updateFileName(e){const t=e.closest(".file.has-name")?.querySelector(".file-name");t&&(e.files.length>0?t.textContent=e.files[0].name:t.textContent="Nenhuma imagem selecionada")}function initializeMuuri(){itemsContainer?(muuriGrid&&muuriGrid.destroy(),muuriGrid=new Muuri(itemsContainer,{items:".card",dragEnabled:!0,dragStartPredicate:function(e,t){const n=e.getElement(),i=t.target;if(document.body.classList.contains("is-bulk-editing")||n.classList.contains("editing")||n.classList.contains("is-details-visible")||i.closest(".shortcode-hp")||i.closest(".shortcode-count")||i.closest(".shortcode-stat")||i.closest(".toggle-view-icon")||i.closest(".card-actions-top")||i.closest(".card-content .title")||i.closest(".card-content .content"))return!1;const r=n.getBoundingClientRect(),a=t.srcEvent.clientX||t.clientX,s=t.srcEvent.clientY||t.clientY;return!!(a-r.left<15||r.right-a<15||s-r.top<15||r.bottom-s<15)&&Muuri.ItemDrag.defaultStartPredicate(e,t)}}),muuriGrid.on("dragEnd",(()=>{const e=muuriGrid.getItems().map((e=>e.getElement().dataset.id));eventHandlers.onReorder&&eventHandlers.onReorder(e)}))):console.error("O contêiner do grid não foi encontrado.")}export function refreshLayout(){muuriGrid?.layout(!0)}export function hide(){muuriGrid&&muuriGrid.destroy(),muuriGrid=null}export function show(){muuriGrid||initializeMuuri()}