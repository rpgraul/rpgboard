export function scrollToCard(e){const t=itemsContainer.querySelector(`.card[data-id="${e}"]`);t&&(t.scrollIntoView({behavior:"smooth",block:"center"}),t.classList.add("is-highlighted"),setTimeout((()=>t.classList.remove("is-highlighted")),1200))}import*as cardRenderer from"./cardRenderer.js";import{showConfirmationPopover}from"./ui.js";import*as cardManager from"./cardManager.js";let eventHandlers={},muuriGrid=null;const itemsContainer=document.getElementById("grid-view-container"),searchInput=document.getElementById("search-input"),loadingIndicator=document.getElementById("loading-indicator");export function initializeGrid(e){eventHandlers=e,itemsContainer.addEventListener("click",(async e=>{const t=e.target,i=t.closest(".card");if(!i)return;if(t.closest(".card-info-layer"))return;const n=t.closest(".action-icon"),r=t.closest(".card-image"),s=i.dataset.id,o=cardManager.getItems().find((e=>e.id===s));if(o)if(n)if(n.classList.contains("delete-btn"))showConfirmationPopover({targetElement:n,message:"Deletar este card?",onConfirm:()=>eventHandlers.onDelete(o)});else if(n.classList.contains("edit-btn"))eventHandlers.onEdit(i,o,itemsContainer);else if(n.classList.contains("save-btn")){const e=i.querySelector(".save-btn");e&&e.classList.add("is-loading");try{const e=await eventHandlers.onSave(i,o,itemsContainer);itemsContainer.classList.remove("is-editing-item"),cardRenderer.renderCardViewMode(i,e),i._newImageFile&&delete i._newImageFile,muuriGrid?.layout(!0)}catch(e){console.error("Falha ao salvar e re-renderizar o card:",e)}finally{e&&e.classList.remove("is-loading")}}else n.classList.contains("cancel-btn")&&(itemsContainer.classList.remove("is-editing-item"),cardRenderer.renderCardViewMode(i,o),i._newImageFile&&delete i._newImageFile,muuriGrid?.layout(!0));else r&&eventHandlers.onView&&eventHandlers.onView(o)}))}export function setItems(e,t=[]){if(loadingIndicator&&(loadingIndicator.style.display="none"),!muuriGrid)return;const i=muuriGrid.getItems(),n=new Set(i.map((e=>e.getElement().dataset.id))),r=new Set(e.map((e=>e.id))),s=i.filter((e=>!r.has(e.getElement().dataset.id)));s.length>0&&muuriGrid.remove(s,{removeElements:!0});const o=e.filter((e=>!n.has(e.id))).map((e=>cardRenderer.createCardElement(e,t)));i.forEach((i=>{const n=i.getElement();if(r.has(n.dataset.id)){const i=e.find((e=>e.id===n.dataset.id));i&&!n.classList.contains("editing")&&cardRenderer.renderCardViewMode(n,i,t)}})),o.length>0&&muuriGrid.add(o);const a=e.map((e=>e.id));muuriGrid.sort(((e,t)=>a.indexOf(e.getElement().dataset.id)-a.indexOf(t.getElement().dataset.id)),{layout:"instant"})}export function updateFileName(e){const t=e.closest(".file.has-name")?.querySelector(".file-name");t&&(e.files.length>0?t.textContent=e.files[0].name:t.textContent="Nenhuma imagem selecionada")}function initializeMuuri(){itemsContainer?(muuriGrid&&muuriGrid.destroy(),muuriGrid=new Muuri(itemsContainer,{items:".card",dragEnabled:!0,dragStartPredicate:function(e,t){const i=e.getElement();console.log(t);const n=t.target;if(document.body.classList.contains("is-bulk-editing")||i.classList.contains("editing")||i.classList.contains("is-details-visible")||n.closest(".shortcode-hp")||n.closest(".shortcode-count")||n.closest(".shortcode-stat")||n.closest(".toggle-view-icon")||n.closest(".card-actions-top")||n.closest(".card-content .title")||n.closest(".card-content .content"))return!1;const r=i.getBoundingClientRect(),s=t.srcEvent.clientX||t.clientX,o=t.srcEvent.clientY||t.clientY;return!!(s-r.left<15||r.right-s<15||o-r.top<15||r.bottom-o<15)&&Muuri.ItemDrag.defaultStartPredicate(e,t)}}),muuriGrid.on("dragEnd",(()=>{const e=muuriGrid.getItems();console.log("dragEnd event triggered!");const t=e.map((e=>e.getElement().dataset.id));eventHandlers.onReorder&&eventHandlers.onReorder(t)}))):console.error("O contêiner do grid não foi encontrado.")}export function refreshLayout(){muuriGrid?.layout(!0)}export function hide(){muuriGrid&&(muuriGrid.destroy(),muuriGrid=null)}export function destroy(){muuriGrid&&(muuriGrid.destroy(),muuriGrid=null)}export function show(){muuriGrid||initializeMuuri()}