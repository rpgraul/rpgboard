import{openModal,closeModal}from"./modal.js";import*as firebaseService from"./firebaseService.js";let settingsModal=null,settingsForm=null,titleInput=null,tagsInput=null,filtersInput=null,fabSettings=null,submitButton=null;function populateForm(t){t&&(titleInput.value=t.siteTitle||"",tagsInput.value=(t.recommendedTags||[]).join(", "),filtersInput.value=JSON.stringify(t.filters||[],null,2))}async function openSettingsModal(){try{populateForm(await firebaseService.getSettings()),openModal(settingsModal)}catch(t){console.error("Falha ao carregar configurações para o modal:",t),alert("Não foi possível carregar as configurações.")}}async function handleSave(t){t.preventDefault(),submitButton.classList.add("is-loading");const e=tagsInput.value.split(",").map((t=>t.trim())).filter(Boolean);let s;try{if(s=JSON.parse(filtersInput.value),!Array.isArray(s))throw new Error("O formato dos filtros deve ser um array JSON.")}catch(t){return alert(`Erro no formato JSON dos filtros: ${t.message}`),void submitButton.classList.remove("is-loading")}const n={siteTitle:titleInput.value,recommendedTags:e,filters:s};try{await firebaseService.saveSettings(n),closeModal(settingsModal),window.location.reload()}catch(t){console.error("Falha ao salvar as configurações:",t),alert("Ocorreu um erro ao salvar as configurações.")}finally{submitButton.classList.remove("is-loading")}}export function initializeSettings(){settingsModal=document.getElementById("settings-modal"),fabSettings=document.getElementById("fab-settings"),settingsForm=document.getElementById("form-settings"),titleInput=document.getElementById("settings-title"),tagsInput=document.getElementById("settings-recommended-tags"),filtersInput=document.getElementById("settings-filters"),settingsModal&&fabSettings&&settingsForm&&(submitButton=settingsForm.closest(".modal-card").querySelector('button[type="submit"]'),fabSettings.addEventListener("click",openSettingsModal),settingsForm.addEventListener("submit",handleSave))}