const ALWAYS_VISIBLE_COMMANDS=["stat"];export function _parseArguments(t){const e=/"([^"]+)"|\S+/g,n=[];let s;for(;null!==(s=e.exec(t));)n.push(s[1]||s[0]);return n}export function _parseKeyValueArgs(t){const e={};return t.forEach((t=>{const n=t.split("=");2===n.length&&(e[n[0].toLowerCase()]=n[1].replace(/^"|"$/g,""))})),e}function formatNumber(t){return"number"!=typeof t&&"string"!=typeof t?t:t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")}function _parseStat(t){const e=["left","right","bottom"],n=t.filter((t=>!e.includes(t)));if(0===n.length)return"";const s=t=>{const e=t.match(/(.*?)\s*\((.*?)\)/);if(e){const t=e[1].trim();return`<span class="has-tooltip" data-tooltip="${e[2].trim()}">${t}</span>`}return t||""};if(1===n.length||"null"===n[0].toLowerCase()){return`<div class="shortcode-stat">${s(1===n.length?n[0]:n.slice(1).join(" "))}</div>`}const a=n[n.length-1];return`<div class="shortcode-stat"><strong>${n.slice(0,-1).join(" ")}:</strong> ${s(a)}</div>`}function _parseHp(t,e,n){const s=_parseKeyValueArgs(t),a=parseInt(s.max,10)||100,r=void 0!==s.current?parseInt(s.current,10):a,o=Math.max(0,Math.min(r,a));return`<div class="shortcode-hp" data-item-id="${e}" data-shortcode="${encodeURIComponent(n)}" data-max-hp="${a}"><strong class="hp-label">PV</strong><div class="hp-input-wrapper"><input type="number" class="hp-current-input" value="${o}" max="${a}" min="0"><span class="hp-max-value">/ ${a}</span></div></div>`}export function parseHpShortcode(t){if(!t||!t.conteudo)return"";const e=t.conteudo.match(/\[hp\s+(.*?)\]/);if(e){return _parseHp(_parseArguments(e[1]),t.id,e[0])}return""}function _parseCount(t,e,n){const s=["left","right","bottom"],a=t.includes("checkbox"),r=t.filter((t=>"checkbox"!==t&&!s.includes(t))),o=_parseKeyValueArgs(r.filter((t=>t.includes("="))));let c="number";o.icon?c="custom-icon":o.theme?c=o.theme:a&&(c="default");const i=r.find((t=>!t.includes("=")))||"",l=parseInt(o.max,10)||0;let u=void 0!==o.current?parseInt(o.current,10):l;if(u=Math.max(0,Math.min(u,l)),!i&&0===l)return"";const p=`data-item-id="${e}" data-shortcode="${encodeURIComponent(n)}"`;let d="";if(["default","arrow","potion","custom-icon"].includes(c)&&l>0){d=`<span class="count-checkboxes-interactive theme-${c}">`;for(let t=1;t<=l;t++){const e=t<=u;let n="";if("arrow"===c)n='<i class="fas fa-arrow-up"></i>';else if("potion"===c)n='<i class="fas fa-flask"></i>';else if("custom-icon"===c){n=`<i class="fas fa-${o.icon.replace(/["']/g,"")}"></i>`}d+=`<span class="count-checkbox ${e?"is-checked":""}" data-value="${t}" role="button" tabindex="0">${n}</span>`}d+="</span>"}else d=`\n            <span class="count-value-interactive">\n                <button class="count-btn" data-action="decrement" aria-label="Diminuir">-</button>\n                <span class="count-current-value">${u}</span>\n                <span class="count-separator">/</span>\n                <span class="count-max-value">${l}</span>\n                <button class="count-btn" data-action="increment" aria-label="Aumentar">+</button>\n            </span>\n        `.trim().replace(/\s+/g," ");return d=`<div class="count-representation">${d}</div>`,`<div class="shortcode-count is-interactive" ${p}>${i?`<strong class="count-name">${i}:</strong> `:""}${d}</div>`}export function parseMainContent(t){if(!t)return"";let e=t.replace(/\[(.*?)\]/g,((t,e)=>{const n=_parseArguments(e),s=n[0]||"",a=(n.slice(1),s.replace("*",""));return s.startsWith("*")||ALWAYS_VISIBLE_COMMANDS.includes(a.toLowerCase())||["hp","count","money"].includes(a.toLowerCase())?"":t}));return e=e.trim(),e.replace(/\n/g,"<br>").replace(/(<br>\s*){2,}/g,"<br>")}export function parseAllShortcodes(t,e={}){if(!t||!t.conteudo)return{left:"",right:"",bottom:"",details:""};const n={left:[],right:[],bottom:[],details:[]},s={stat:1,money:2,hp:3,count:4,default:99},a=[];return t.conteudo.replace(/\[(.*?)\]/g,((t,e)=>{const n=_parseArguments(e),s=(n[0]||"").replace("*","").toLowerCase(),r=n.slice(1);["stat","hp","count","money"].includes(s)&&a.push({command:s,args:r,originalShortcode:t})})),a.sort(((t,e)=>(s[t.command]||s.default)-(s[e.command]||s.default))),a.forEach((s=>{let a=null;s.args.includes("left")?a="left":s.args.includes("right")?a="right":s.args.includes("bottom")&&(a="bottom");let r="";switch(s.command){case"stat":r=_parseStat(s.args),n[a||"left"].push(r);break;case"hp":r=_parseHp(s.args,t.id,s.originalShortcode),n[a||"bottom"].push(r);break;case"money":const o=_parseKeyValueArgs(s.args),c=parseFloat(o.current)||0;let i=o.currency||"";if(!i){const t=["left","right","bottom"],n=s.args.find((e=>!e.includes("=")&&!t.includes(e)));n?i=n:e.defaultCurrency&&(i=e.defaultCurrency)}const l=formatNumber(c);r=`\n                    <div class="shortcode-money is-interactive" data-item-id="${t.id}" data-shortcode="${encodeURIComponent(s.originalShortcode)}">\n                        <i class="fas fa-coins"></i>\n                        <span class="money-value-display">${l}</span><input type="text" class="money-value-input is-hidden" value="${c}"><span class="money-currency">${i}</span>\n                    </div>\n                `.trim().replace(/\s+/g," "),n[a||"left"].push(r);break;case"count":const u=s.originalShortcode.includes("[*count"),p=_parseCount(s.args,t.id,s.originalShortcode);u?n[a||"right"].push(p):a?n[a].push(p):n.details.push(p)}})),{left:n.left.join(""),right:n.right.join(""),bottom:n.bottom.join(""),details:n.details.join("")}}