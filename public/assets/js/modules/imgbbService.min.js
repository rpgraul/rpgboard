const IMGBB_API_URL="https://api.imgbb.com/1/upload";export async function uploadImage(e){const a=window.IMGBB_API_KEY;if(!a)throw new Error("ImgBB API Key não configurada");const o=(await fileToBase64(e)).split(",")[1],r=new FormData;r.append("key",a),r.append("image",o);try{const e=await fetch(IMGBB_API_URL,{method:"POST",body:r});if(!e.ok)throw new Error(`Erro ao fazer upload: ${e.statusText}`);const a=await e.json();if(!a.success)throw new Error("Falha no upload da imagem");return{url:a.data.url,deleteUrl:a.data.delete_url,displayUrl:a.data.display_url,thumb:a.data.thumb.url,medium:a.data.medium.url}}catch(e){throw console.error("Erro ao fazer upload da imagem:",e),e}}function fileToBase64(e){return new Promise(((a,o)=>{const r=new FileReader;r.onload=()=>a(r.result),r.onerror=e=>o(e),r.readAsDataURL(e)}))}export async function processImageFromUrl(e){try{const a="https://corsproxy.io/?",o=await fetch(a+encodeURIComponent(e));if(!o.ok)throw new Error(`Falha ao buscar imagem: ${o.statusText}`);const r=await o.blob();if(!r.type.startsWith("image/"))return console.warn(`URL não aponta para uma imagem válida: ${e}`),null;const t=await getImageDimensions(r),n=new File([r],"uploaded_image.jpg",{type:r.type}),i=await uploadImage(n);return{url:i.url,deleteUrl:i.deleteUrl,...t}}catch(a){return console.error(`Não foi possível processar a imagem da URL ${e}:`,a),null}}function getImageDimensions(e){return new Promise(((a,o)=>{const r=new Image;r.onload=()=>{URL.revokeObjectURL(r.src),a({width:r.width,height:r.height})},r.onerror=o,r.src=URL.createObjectURL(e)}))}