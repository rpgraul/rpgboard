import{writeBatch,collection,doc,serverTimestamp}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js";import{ref,uploadBytes,getDownloadURL}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";const{db:db,storage:storage}=window.firebaseInstances;async function processImageFromUrl(e){try{const t="https://corsproxy.io/?",o=await fetch(t+encodeURIComponent(e));if(!o.ok)throw new Error(`Falha ao buscar imagem: ${o.statusText}`);const a=await o.blob();if(!a.type.startsWith("image/"))return console.warn(`URL não aponta para uma imagem válida: ${e}`),null;const r=await new Promise(((e,t)=>{const o=new Image;o.onload=()=>{URL.revokeObjectURL(o.src),e({width:o.width,height:o.height})},o.onerror=t,o.src=URL.createObjectURL(a)})),s=e.split("/").pop().split("?")[0]||`image_${Date.now()}`,i=ref(storage,`images/${Date.now()}_${s.replace(/[^a-zA-Z0-9._-]/g,"")}`);await uploadBytes(i,a);return{url:await getDownloadURL(i),storagePath:i.fullPath,...r}}catch(t){return console.error(`Não foi possível processar a imagem da URL ${e}:`,t),null}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("json-input"),t=document.getElementById("import-btn"),o=document.getElementById("notification-area");function a(e,t="is-success"){o.innerHTML=`\n            <div class="notification ${t}">\n                <button class="delete"></button>\n                ${e}\n            </div>\n        `;o.querySelector(".delete").addEventListener("click",(()=>{o.innerHTML=""}))}t.addEventListener("click",(async()=>{const r=e.value.trim();if(!r)return void a("O campo de JSON não pode estar vazio.","is-danger");let s;try{s=JSON.parse(r)}catch(e){return void a(`Erro de sintaxe no JSON: ${e.message}`,"is-danger")}if(Array.isArray(s)&&0!==s.length){t.classList.add("is-loading"),o.innerHTML="";try{const t=writeBatch(db),o=collection(db,"rpg-items");for(const e of s){const r=doc(o),s={...e,titulo:e.titulo||"Card Sem Título",conteudo:e.conteudo||"",descricao:e.descricao||"",tags:e.tags||[],isVisibleToPlayers:e.isVisibleToPlayers??!0,createdAt:serverTimestamp(),order:e.order??-Date.now()};if(e.imagem&&"string"==typeof e.imagem){a(`Processando imagem para: ${e.titulo}...`,"is-info");const t=await processImageFromUrl(e.imagem);t&&Object.assign(s,t)}delete s.imagem,t.set(r,s)}await t.commit(),a(`${s.length} card(s) importado(s) com sucesso!`,"is-success"),e.value=""}catch(e){console.error("Erro ao importar cards:",e),a(`Ocorreu um erro durante a importação: ${e.message}`,"is-danger")}finally{t.classList.remove("is-loading")}}else a("O JSON deve ser um array de cards e não pode estar vazio.","is-danger")}))}));